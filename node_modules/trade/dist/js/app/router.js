(function() {
  define(["marionette", "user/user", "user/userEmpty", "user/userModel", "search/search", "search/searchModel", "gift/giftCollection", "gift/giftCollectionView"], (function(Marionette, User, UserEmpty, UserModel, Search, SearchModel, GiftCollection, GiftCollectionView) {
    var app;
    app = new Marionette.Application();
    app.addRegions({
      page: "#page",
      content: "#content",
      login: "#login",
      searchInput: "#search",
      searchResult: "#result",
      giftList: "#gifts"
    });
    app.on("initialize:after", function() {
      if (!Backbone.history.started) {
        Backbone.history.start();
      }
      $("#init").remove();
      this.searchInput.show(this.search.render());
      return this.login.show(this.user.render());
    });
    app.on("initialize:before", function() {
      var giftCollection, searchModel, userModel;
      Backbone.emulateHTTP = true;
      userModel = new UserModel();
      userModel.fetch();
      searchModel = new SearchModel();
      this.search = new Search({
        model: searchModel
      });
      giftCollection = new GiftCollection();
      giftCollection.fetch();
      userModel.on("sync", (function(_this) {
        return function() {
          _this.user = new User({
            model: userModel
          });
          return _this.login.show(_this.user.render());
        };
      })(this));
      giftCollection.on("sync", (function(_this) {
        return function() {
          _this.gifts = new GiftCollectionView({
            collection: giftCollection
          });
          _this.gifts.setUser(_this.user.model.get("username"));
          return _this.giftList.show(_this.gifts.render());
        };
      })(this));
      return this.user = new UserEmpty({
        model: userModel
      });
    });
    return app;
  }));

}).call(this);
